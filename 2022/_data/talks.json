{
  "items": [
    {
      "id": "61df3543ef0a16083d127537",
      "title": "Distribución Progresiva en la era de Kubernetes",
      "languages": [
        "es"
      ],
      "abstract": "<p>Producción es el lugar donde las aplicaciones deben estar. Aunque apliques Integración y Distribución Continua, cada vez que despliegues una nueva versión en producción te preguntarás si funcionará o habrá algún bug en la última versión, incluso haciendo que producción deje de estar disponible para los clientes.</p><p>La Distribución Progresiva es el siguiente escalón después de la Distribución Continua para probar tu aplicación en producción antes de ponerla disponible a todos tus usuarios.</p><p>Pon en práctica la Distribución Progresiva con técnicas como blue-green, canary release, shadowing traffic o dark launches para validar tu aplicación en Kubernetes con herramientas como Istio, Prometheus, ArgoDC o Argo Rollouts.</p><p>Únete a la sesión para aprender sobre Distribución Progresiva en acción usando Kubernetes.</p>",
      "type": "talk",
      "tags": [
        "kubernetes",
        "argocd",
        "argo rollouts"
      ],
      "level": "advanced",
      "speakers": [
        "5c4dc84af05c736fb61555d97670869511e52764"
      ],
      "scheduleId": "#TUE-TC3-SE3"
    },
    {
      "id": "61e406409e44e3083e435f60",
      "title": "The hidden gems of distributed tracing",
      "languages": [
        "eng"
      ],
      "abstract": "<p>When building distributed systems, we aim to get a macro view and zoom in when a particular component seems to be at fault for a failure. Luckily, distributed tracing captures the detailed execution of causally-related activities performed by the elements of a distributed system as it processes a given request.</p><p>If you wonder how different the execution of the requests from the system's expected behavior was, join my session to learn how to recognize trace patterns, determine the bottlenecks when a request is too slow, and deal with oversampling or traffic labeling in production.</p>",
      "type": "talk",
      "tags": [
        "cloud",
        "distributed systems",
        "tracing",
        "practices"
      ],
      "level": "middle",
      "speakers": [
        "959143ffd6c954e5e544cdce71383429895e3679"
      ],
      "scheduleId": "#MON-TC1-SE3"
    },
    {
      "id": "61f1a0e0c4c4120b9d29afa0",
      "title": "Libertad significa que Kubernetes debe desaparecer",
      "languages": [
        "es"
      ],
      "abstract": "<p>Todos nos estamos moviendo hacia modelos de organización basados en servicios y equipos autosuficientes. Todos estamos intentando de permitir que los desarrolladores sean más autónomos. Sin embargo, no es realista esperar que todos se conviertan en expertos en todo, desde infraestructura hasta Kubernetes y todo lo demás. Por lo tanto, no podemos cambiar de un día para el otro por la falta de experiencia, pero tampoco podemos seguir siendo reactivos a las necesidades de los demás. La única opción que queda es simplificar los servicios o incluso eliminar el acceso directo a la infraestructura y Kubernetes.</p><p>Es posible que podamos lograr esos objetivos a través de Argo CD o Flux (GitOps), Crossplane (universal control plane) y KubeVela (OAM). Al combinarlos, podemos permitir que los desarrolladores administren todo y aún así tengan el control total de los aspectos que les interesan. GitOps nos permite establecer Git como único punto de interacción con el sistema. Crossplane Composites nos permite simplificar la experiencia del desarrollador al administrar la infraestructura. Finalmente, el Open Application Model (OAM) con KubeVela nos permite definir aplicaciones en lugar de recursos de Kubernetes. Si combinamos estos tres tipos de herramientas y procesos, podemos permitir que las operaciones definan los servicios utilizados por los desarrolladores para administrar la infraestructura y las aplicaciones. Podemos hacer todo eso sin que nadie sepa que hay Kubernetes detrás de todo eso.</p><p>Para que todos puedan usar Kubernetes, debe desaparecer.</p>",
      "type": "talk",
      "tags": [
        "Cloud",
        "Kubernetes",
        "Crossplane",
        "OAM",
        "KubeVela"
      ],
      "level": "middle",
      "speakers": [
        "0ba89c51baf9f8542188bd750973e0767fbcaa68"
      ],
      "scheduleId": "#TUE-TC3-SE4"
    },
    {
      "id": "61f1a32cc4c4120b9d29afa3",
      "title": "Live Diagramming of Knative Core Concepts",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Although Knative has been community-maintained since 2018, there has been buzz around the project lately because Google has recently submitted Knative to the CNCF for consideration as an incubating project.</p><p>Cool! But what is Knative, exactly?</p><p>Simply put, Knative is a technology that streamlines and enhances the way that applications run on Kubernetes.</p><p>This talk is for people who are excited about this value proposition and want to dig deeper. How does it work? What components are at play? In what ways is running an app on Knative superior to running it directly on Kubernetes?</p><p>Instead of presenting slides, Whitney will draw out the fundamental concepts of Knative, explaining how they work in simple, relatable terms. She will then drive deeper understanding by giving context to the main points with real-life, straightforward use cases.</p><p>Attend this talk to gain a high-level understanding of Knative, its main components, and how it simplifies and improves the way that apps run on Kubernetes.</p>",
      "type": "talk",
      "tags": [
        "Knative",
        "Kubernetes",
        "Cloud",
        "Eventing"
      ],
      "level": "beginner",
      "speakers": [
        "576aeba6a8ebcbe244cc16bd0f973593673cc530"
      ],
      "scheduleId": "#TUE-TC1-SE7"
    },
    {
      "id": "61f1a45bc4c4120b9d29afa4",
      "title": "Dapr: Dinosaur or Developer's Dream?",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Dapr lets you abstract your distributed architecture from the underlying infrastructure that powers it. Forget about Kafka, RabbitMQ or any cloud-specific product: you're talking with a pub/sub broker. Let Dapr take care of how it works. Want to switch later? Sure, no problem!</p><p>So, is Dapr the new J2EE application server? How could it change the way we develop distributed solutions? Join me in this talk to find out if we're looking at a dinosaur in a fancy suit, or a developer's dream.</p>",
      "type": "talk",
      "tags": [
        "distributed architecture",
        "cloud native"
      ],
      "level": "middle",
      "speakers": [
        "f33256b1512b570f58cde29c69166d0fab470334"
      ],
      "scheduleId": "#TUE-TC1-SE4"
    },
    {
      "id": "61f1ba52c4c4120b9d29afa6",
      "title": "Java Next - From Amber to Loom, from Panama to Valhalla",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Java's four big projects are entering the home stretch: Amber and Panama have already incubated, previewed, and even finalized some features, Loom and Valhalla are on track to follow soon. Time to take a closer look at how...</p><p><ul></p><p><li>Project Amber makes the language more expressive and ready for today's and tomorrow's problems</li></p><p><li>Project Panama cuts through the isthmus separating Java from native code</li></p><p><li>Project Loom enables hassle-free and efficient structured concurrency</li></p><p><li>Project Valhalla mends the rift in Java's type system and improves performance</li></p><p></ul></p><p>After this talk, you will know what to expect from Java in the next few years.</p>",
      "type": "talk",
      "tags": [
        "Java",
        "Amber",
        "Panama",
        "Loom",
        "Valhalla"
      ],
      "level": "advanced",
      "speakers": [
        "78328a04b91142ff18f2a8885d6ec99391906a66"
      ],
      "scheduleId": "#TUE-TC1-SE6"
    },
    {
      "id": "61fc3c0a4fc8140baaa031b4",
      "title": "What Java Devs Need To Know About Observability",
      "languages": [
        "eng"
      ],
      "abstract": "<p>As applications move to containers and migrate to the cloud, they become ever more complex, and it's increasingly important to monitor, analyze, and diagnose their behaviour. Observability is a new way of thinking about monitoring and understanding your applications. It’s supported by a growing range of open source tools and standards - part of the new wave of technologies that modern developers need to go fully Cloud Native.</p><p>Join Ben Evans to get the basics of the necessary theory behind Observability, including the fundamentals of monitoring, metrics, and tracing, and then get hands-on. You'll learn how to achieve observability in Java using OpenTelemetry, the emerging Open Standard for Observability, and we'll meet several other related OSS libraries and tools  (such as Jaeger) along the way.</p>",
      "type": "workshop",
      "tags": [
        "Cloud",
        "Java",
        "Observability",
        "OpenTelemetry"
      ],
      "level": "beginner",
      "speakers": [
        "6d4ec093aeee2a5dde4bbce8e9698776ce7bd5b8"
      ],
      "scheduleId": "#WED-TC5-SE1"
    },
    {
      "id": "61fd70f54fc8140baaa031bc",
      "title": "REACTIVE Una nueva esperanza! Lecciones de una historia de Rendimiento",
      "languages": [
        "es"
      ],
      "abstract": "<p>En la era en que los desarrolladores se quejan del rendimiento. Un equipo de desarrolladores rebeldes, atacan desde una base oculta y han obtenido su primera victoria contra las malvadas aplicaciones bloqueantes. En esta sesión, los asistentes aprenderán a partir de una experiencia de la vida real el cambio a paradigma reactivo; cubriremos consejos y trucos de una experiencia en la evolución de una aplicación bancaria. Durante la sesión obtendrás consejos, trucos, pros, contras y las razones para mover su código hacia una aplicación sin bloqueos, en base de  ejemplos de código incluyendo las consideraciones de seguridad en esta evolución. Usaremos fragmentos de código basados en JAVA, JWT, JWS, Auth0, Spring Boot, Reactor y Webflux desplegados en la nube</p>",
      "type": "talk",
      "tags": [
        "Java",
        "Reactive",
        "Microservice",
        "Architecture"
      ],
      "level": "middle",
      "speakers": [
        "8096d60f578c4cc2c777f231d1dff6aa46f4457b"
      ],
      "scheduleId": "#MON-TC3-SE4"
    },
    {
      "id": "61fd71234fc8140baaa031bd",
      "title": "Going Reactive with Helidon!",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Helidon is a brave, small but powerful opensource framework for writing microservices. And if you need get the maximum performance – making your apps reactive is the currently the best way to do it! In this session we will dive deeper and see how to create extremely performant reactive microservices with Helidon “SE” flavour. We will explore its Reactive APIs, asynchronous DB access, and reactive Web-Client. Since Helidon has its own powerful Reactive Engine, we will learn how to get the most requests served in async operations and Messaging. We will also compare the performance with Loom, since Helidon supports it out of the box! Welcome to the Danger Zone!</p>",
      "type": "talk",
      "tags": [
        "helidon",
        "microservices",
        "reactive",
        "loom"
      ],
      "level": "middle",
      "speakers": [
        "74479a1ccc69e03d3868de48e18a4d759165d326"
      ],
      "scheduleId": "#MON-TC1-SE6"
    },
    {
      "id": "61fd71544fc8140baaa031be",
      "title": "Event streaming applications with Kafka Streams, Spring Kafka and Actuator (live coding)",
      "languages": [
        "eng"
      ],
      "abstract": "<p>We often make applications in which REST (HTTP) predominates, but is this a smart choice? Can't it be faster, or rather asynchronously and event based? Especially if you work with BIG DATA, Kafka is usually the better option.You get a whole platform where scalability, fault tolerance and replay-ability are very important (you don't want your message to be lost, and preferably you want to process it again if your system has been down).</p><p>There are three libraries we will discuss during live coding:</p><ul><li>Spring Kafka, where we will create a consumer and producer and test them with test-containers (without starting a whole cluster yourself).</li><li>Kafka Streams, a perfect fit for functional programming! With the StreamsAPI we will cover the best and most used patterns like branching, joining, mapping and more. We will create a Topology (stream) where we will handle fraud detection.</li><li>Spring Actuator is a match when you want to monitor your stream of events, you already got a lot of metrics for free!</li></ul><p>After the session you can create your own application with consumers, producers and streams!</p>",
      "type": "talk",
      "tags": [
        "Kafka Streams",
        "Big Data",
        "Java"
      ],
      "level": "middle",
      "speakers": [
        "98d92074e12051b600499049a3773caf3fc5dd60"
      ],
      "scheduleId": "#TUE-TC5-SE4"
    },
    {
      "id": "61fd72704fc8140baaa031bf",
      "title": "Performance Testing Java Applications",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Every so often,  you’ll read a performance benchmark (of a Java or other application), with bold claims for how well X performs compared to Y. Testing the performance of your Java application is an artform rather than engineering, and is a minefield of misconceptions, misunderstanding, and misinformation. In this session, we will review the basics and give you concrete steps to build a robust performance testbed for your application. We will be looking at this from a real-world server-side application point of view, specifically for Java apps. We’ll review common problems and how to avoid them. We’ll cover these topics while building up a performance test and running it live:</p><p>Define your goals: SLA, latency, throughput, stability</p><p>Test env vs. Production env for testing</p><p>The impact of GC on Java app performance</p><p>Tools for setting up, driving load, and getting perf test results</p><p>Testing application infrastructure like Kafka, Spark and Cassandra</p><p>Operating system settings, JVM settings, memory sizing, and CPU sizing</p><p>Analyzing perf test results and finding bottlenecks that are both apparent and not obvious</p>",
      "type": "talk",
      "tags": [
        "java",
        "performance"
      ],
      "level": "advanced",
      "speakers": [
        "5c8cf21786cae4a337b4c305fe244359243ded67"
      ],
      "scheduleId": "#TUE-TC2-SE5"
    },
    {
      "id": "61fd73e74fc8140baaa031c0",
      "title": "Why You Can’t Buy Cloud Native",
      "languages": [
        "eng"
      ],
      "abstract": "<p>The virtual shelves are filled to bursting with cloud native technologies; containers, runtimes, CI pipelines, observability tools. The more an organisation buys, the more cloud native it is, right? And the more network communication an app involves, the more cloud native it is, right? Well, not so much. It turns out cloud native is about how you deliver software, not the tools you use. This talk explains these often-overlooked elements for cloud native success:</p><ul><li>Figuring out what problem we’re trying to solve</li><li>Releasing</li><li>Testing, but not the way you’re used to</li></ul>",
      "type": "talk",
      "tags": [
        "cloud",
        "culture"
      ],
      "level": "middle",
      "speakers": [
        "16b53ff6547870b3f9c9ef9f5eb97b015ba88e8b"
      ],
      "scheduleId": "#TUE-TC2-SE7"
    },
    {
      "id": "61fd74f14fc8140baaa031c1",
      "title": "Historia de un desarrollador de Java que se cambia a Go en el contexto de Kubernetes",
      "languages": [
        "es"
      ],
      "abstract": "<p>En esta presentación, Mauricio, apasionado desarrollador Java, comparte sus hallazgos psicodélicos trabajando en el ecosistema Go para el Proyecto Knative OSS. Esta presentación se centra en el ecosistema Go en lugar de la diferencia entre los lenguajes Java y Go. Se discutirán herramientas como la gestión de dependencias, IDE, marcos y cómo lidiar con proyectos grandes. Si bien Java sigue siendo importante en mi corazón, hay lecciones a tener en cuenta, frameworks y herramientas que tal vez querríamos traer al ecosistema de Java de la vibrante comunidad de Go. Se hace especial énfasis en las herramientas relacionadas con Kubernetes y por qué creo que Go en Kubernetes está muy por delante de Java.</p>",
      "type": "talk",
      "tags": [
        "Cloud",
        "java",
        "go",
        "kubernetes",
        "tools",
        "frameworks"
      ],
      "level": "middle",
      "speakers": [
        "4b26a098aafaf6bc3d533389b61d3ef5ab01f5a3"
      ],
      "scheduleId": "#TUE-TC3-SE5"
    },
    {
      "id": "620d60d18fcdb80b9ff5371f",
      "title": "Addressing the transaction challenge in a cloud-native world",
      "languages": [
        "eng"
      ],
      "abstract": "<p>With microservices comes great benefits but also great challenges! One such challenge is data consistency and integrity. Traditionally, tightly coupled transactions were used to ensure strong consistency and isolation. However, this results in strong coupling between services due to data locking and decreasing concurrency, both of which are unsuitable for microservices. So, how do we provide consistency guarantees for flows that span long periods of time in cloud-native applications? We'll address this challenge by investigating the Saga pattern for distributed transactions, the MicroProfile Long Running Action (LRA) specification and how these can be used to develop effective cloud-native Java microservices.</p>",
      "type": "talk",
      "tags": [
        "Transactions",
        "Cloud-Native",
        "Java",
        "MicroProfile",
        "OSS"
      ],
      "level": "middle",
      "speakers": [
        "b21e540e924111f0e9d271ed82350fa020b9972e"
      ],
      "scheduleId": "#MON-TC2-SE8"
    },
    {
      "id": "620d61808fcdb80b9ff53720",
      "title": "Diagrams as code 2.0",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Diagrams as code is becoming a popular way to diagram software architecture, particularly for long-lived high-level documentation - write the diagram source in a text-based domain specific language (e.g. PlantUML or Mermaid) or a programming language, and render diagrams using web-based or command line tooling. The benefits are well understood - writing the diagram source as text allows for easy integration into software development practices and toolchains, plus the automatic layout facilities allow authors to focus on content. The problem with this approach is that it's easy for diagrams to get out of sync. Enter \"diagrams as code 2.0\" and the open source Structurizr DSL - a Java-based library providing a way to define a model of our software architecture and the views that we'd like to see, ultimately resulting in a consistent set of diagrams that are generated for us.</p>",
      "type": "talk",
      "tags": [
        "Software Architecture",
        "Java"
      ],
      "level": "middle",
      "speakers": [
        "a51f5e99c5211c81d99cd6f4e4217940c41e2d5d"
      ],
      "scheduleId": "#TUE-TC2-SE6"
    },
    {
      "id": "620d629d8fcdb80b9ff53721",
      "title": "The Call of Ctooling: The Secrets Behind Native Image Building",
      "languages": [
        "eng"
      ],
      "abstract": "<p>You have learned about the “Closed World Assumption”. You live by the rule “Thou Shall Sparingly Use Reflection”. You know that “From the Powerful defineClass Comes Great Responsibility”. And yet you were still left to wonder: what is it still eluding me? What is the secret ingredient that I am still missing? Join us for a short, but deeper dive into some of the dark magic behind GraalVM’s native image builder: heap snapshotting and build-time initialization. And learn more about other obscure projects investigating the craft of static Java compilation.</p>",
      "type": "talk",
      "tags": [
        "native image",
        "graalvm",
        "compilers",
        "leyden"
      ],
      "level": "advanced",
      "speakers": [
        "2b7ec441cce9bb5ab34f86732420a111c517420a"
      ],
      "scheduleId": "#TUE-TC5-SE6"
    },
    {
      "id": "620d634d8fcdb80b9ff53722",
      "title": "Developer Experience with Java on Kubernetes",
      "languages": [
        "eng"
      ],
      "abstract": "<p>In the cloud-native world, being a developer might be challenging. The number of technologies and patterns to know can be overwhelming. This session presents an approach based on open-source technologies and focused on improving the inner development loop and continuous delivery on Kubernetes. The end goal is delivering value continuously, quickly, and reliably.</p><p>First, I’ll present several techniques for working locally in an effective and productive way. Should you run Kubernetes in your development environment? I’ll cover a few different options. Using Java and Spring Boot, we’ll build a cloud native application following the principles of test-driven development. The inner development loop will be enhanced with Cloud Native Buildpacks, Skaffold, and Telepresence.</p><p>Continuous integration is a crucial practice for continuous delivery. We’ll check in code regularly, triggering an automated process to build, test, and package the application. Do you use pull requests? Relying on ArgoCD and Knative, I’ll show you how to work with temporary environments created dynamically when a new pull request is opened. Next, further acceptance tests will be carried on in a production-like environment to ensure the mainline is always in a releasable state. Finally, we’ll deploy and release the new changes to production following the GitOps principles.</p>",
      "type": "talk",
      "tags": [
        "Java",
        "JVM",
        "Spring Boot",
        "Kubernetes",
        "Knative",
        "TDD",
        "Continuous Delivery"
      ],
      "level": "beginner",
      "speakers": [
        "311027298ebb9e1b88923214cff580786cf3d908"
      ],
      "scheduleId": "#MON-TC4-SE6"
    },
    {
      "id": "621907a14010570ba9b6dd69",
      "title": "Stranger Danger: Your Java Attack Surface Just Got Bigger",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Building cloud-native Java applications is undoubtedly awesome.</p><p>However, it comes with undeniable new risks. Next to your own code, you are relying on so many other things.</p><p>Blindly depending on open-source libraries and Docker images can form a massive risk for your application.</p><p>The wrong package can introduce severe vulnerabilities into your application, exposing your application and your user's data.</p><p>Join this talk where we’ll show common threats, vulnerabilities, and misconfiguration including the recently disclosed issues in Log4j.</p><p>Most importantly, you’ll learn how to protect your application with actionable remediation and best practices.</p>",
      "type": "talk",
      "tags": [
        "Java",
        "Security",
        "Cloud-Native"
      ],
      "level": "middle",
      "speakers": [
        "a4529dc3081fc5242a51aecadc114b5ff5aa1520"
      ],
      "scheduleId": "#MON-TC2-SE4"
    },
    {
      "id": "621908084010570ba9b6dd6b",
      "title": "Enter Serverless Functions Journey with Quarkus",
      "languages": [
        "eng"
      ],
      "abstract": "<p>This workshop is designed to be hands-on experiences on how developers can get started with scaffolding serverless functions projects using Quarkus, a new Kubernetes native Java framework with familiar tools (e.g. CLI, Maven, Gradel). The workshop covers deploying service functions to AWS Lambda, optimizing the functions, making them portable across multiple serverless platforms ( e.g., AWS Lambda, Azure Function, Google Cloud Platform, Kubernetes Knative), and using the latest handy command-line tool (e.g. Kn func) to enable a Buildpack for function development & deployment in minutes. Lab participants will be provided a free sandbox for serverless deployments.</p><p>Lab instructions(WIP): https://github.com/RedHat-Middleware-Workshops/enter-serverless-functions/blob/main/README.md</p>",
      "type": "workshop",
      "tags": [
        "Serverless",
        "Java",
        "Kubernetes",
        "Quarkus",
        "Function"
      ],
      "level": "middle",
      "speakers": [
        "772aed76233c2cc81c2c9787426760c125fbe421"
      ],
      "scheduleId": "#WED-TC2-SE1"
    },
    {
      "id": "621909084010570ba9b6dd6c",
      "title": "Choose your own adventure with Spring Security",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Learn and apply Spring Security 5+ in a collection of individual challenges, for all levels. From picking the right dependency, to enforcing security constraints. Choose from a series of self-guided exercises around authorization to suit your needs. Topics include: OpenID Connect, Keycloak and integrating with Spring Cloud Gateway, Spring Data and Testing. Walk away with increased confidence in Spring Security and what it can do for your projects.</p>",
      "type": "workshop",
      "tags": [
        "Spring",
        "Security"
      ],
      "level": "middle",
      "speakers": [
        "77c600183db4294a11712dd71a78a680b7008818"
      ],
      "scheduleId": "#WED-TC4-SE2"
    },
    {
      "id": "621909364010570ba9b6dd6d",
      "title": "Spring For Architects",
      "languages": [
        "eng"
      ],
      "abstract": "<p>With globally distributed applications (and teams!) the job of software architect isn’t getting any easier; applications are growing increasingly complex and architects are spread thin. You can’t be involved with every decision, you must empower your teams while ensuring they are making good choices. How do you do that? How can frameworks like Spring not only make your life easier but help your teams deliver robust applications to production? Spring Cloud has a veritable plethora of sub projects from circuit breakers to functions simplifying the task of building cloud native applications while making it easy for developers to adhere to best practices. At the same time it can be overwhelming to get your head wrapped around all the features Spring offers. This talk will show how Spring allows architects to focus on the critical design decisions they need to make while ensuring developers are empowered to implement critical business use cases. Today’s cloud native applications have similar pitfalls, luckily Spring is here to help you resolve them!</p>",
      "type": "workshop",
      "tags": [
        "spring",
        "java",
        "architecture",
        "cloud native",
        "architect"
      ],
      "level": "middle",
      "speakers": [
        "ab822b577be6a2418593327d0530f2e48da634a4",
        "8730b5530ca70d453220ebfa9278c051d0492045"
      ],
      "scheduleId": "#WED-TC1-SE2"
    },
    {
      "id": "621909594010570ba9b6dd6e",
      "title": "Jakarta EE 10 Feature by Feature",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Jakarta EE 10 is here with lots of new features and improvements. This session will go through these features one by one with live coding examples of how to use them.</p><p>You will get a full overview of what Jakarta EE 10 brings to the table, including the brand new Jakarta EE Core Profile that targets smaller runtimes.</p><p>If time allows, a sneak peek into what to expect beyond Jakarta EE 10 will also be provided.</p>",
      "type": "talk",
      "tags": [
        "Jakarta EE",
        "Cloud",
        "Enterprise Java"
      ],
      "level": "middle",
      "speakers": [
        "d8b71cf333c0d6c1dd9126059adf41444e95a605"
      ],
      "scheduleId": "#TUE-TC1-SE2"
    },
    {
      "id": "62190ab64010570ba9b6dd6f",
      "title": "What the heck is DevRel?",
      "languages": [
        "eng"
      ],
      "abstract": "<p>In recent years, we have seen new job titles appear, at the crossroads between tech, marketing and the community: Developer Advocate, Developer Evangelist, Technical Advocate… These jobs are grouped together in a large category: Developer Relations, or quite simply DevRel ...</p><p>But what exactly is a DevRel? What does he/she do for a living? Is he/she just a glitter thrower? Does he/she spend his/her life in conferences? Does he/she know airports and train stations inside out? Does he/she have a unicorn costume in his/her luggage?</p><p>Aurélie and Horacio will show you in this talk, with their humor and good mood, their daily life, the different types of activities and what is really behind this DevRel job… And you might even get some little anecdotes ^^</p>",
      "type": "talk",
      "tags": [
        "DevRel",
        "Job",
        "Development"
      ],
      "level": "beginner",
      "speakers": [
        "f3a44479f0e0e748cca666a713d65df707eb5016",
        "e2f19f832dda1ec89c3019769e30a7d00f564198"
      ],
      "scheduleId": "#MON-TC4-SE5"
    },
    {
      "id": "6229158356274e0bddf00791",
      "title": "Java on CRaC: Superfast JVM Application Startup",
      "languages": [
        "eng"
      ],
      "abstract": "<p>One of the key benefits of a microservice architecture is the ability to dynamically respond to changes in load by spinning up new instances as required. However, when deploying JVM-based services, the warmup time of JIT compilation can be a limitation on the effectiveness of this technique.</p><p>One approach to solving this problem is using native images, where the service is statically compiled using an ahead-of-time (AOT) compiler.  Although this does reduce startup time and footprint, it does so at the cost of overall performance.</p><p>A new project has been proposed and accepted into OpenJDK called CRaC (Coordinated Restore at Checkpoint).  The goal is to research the co-ordination of Java programs with mechanisms to checkpoint (snapshot) a running application.  Restoring from the snapshot could solve some of the problems with the startup and warmup times, especially in microservices.</p><p>In this session, we’ll look at the main challenges for such a project, potential solutions and the results from a proof-of-concept implementation.</p>",
      "type": "talk",
      "tags": [
        "JDK",
        "JVM",
        "OpenJDK"
      ],
      "level": "middle",
      "speakers": [
        "e5979093f4775ff480701b323ef5f347812a3ce0"
      ],
      "scheduleId": "#MON-TC2-SE7"
    },
    {
      "id": "622916e656274e0bddf0079b",
      "title": "Seamless SSO workshop : KEYCLOAK + SPRING + VUE.JS + LDAP",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Join us in this workshop for learning how we have utilized great open source identity management solution Keycloak for managing user authentication, synchronizing user groups, user group memberships, etc. by integrating with Active Directory (or any enterprise LDAP). Keycloak is also capable of identity management via social media providers e.g. Linkedin, Github, Twitter, etc.</p><p>During the workshop, we will go through all the important steps one by one, hands-on</p><p>1. Keycloak configuration</p><p>1.1. Realm creation / configuration</p><p>1.2. User federation, LDAP integration</p><p>1.3. users / groups syncronization from LDAP</p><p>1.4. perform authentication requests via postman</p><p>2. Spring Security confgiuration</p><p>2.1. verification of keycloak JWT token</p><p>2.2. extracting username and roles from the JWT token</p><p>2. Vue.js app integration</p><p>2.1. simple one page vue.js app performing login operation from Keycloak and makine one simple REST request to Spring Rest service</p><p>For the sake of timing during the workshop, Keycloak - LDAP will be provided as a docker container and Spring and Vue.js projects will be shared as a template via Github so that the audience can focus on the important parts.</p>",
      "type": "workshop",
      "tags": [
        "keycloak",
        "security",
        "spring",
        "identity management",
        "openid-connect",
        "ldap"
      ],
      "level": "middle",
      "speakers": [
        "5a014096a2b2b36a9a4058dd045242f74f71d32a"
      ],
      "scheduleId": "#WED-TC1-SE1"
    },
    {
      "id": "6229173756274e0bddf0079d",
      "title": "Desarrollando aplicaciones de bases de datos con Micronaut Data y GraalVM",
      "languages": [
        "es"
      ],
      "abstract": "<p>Micronaut Data permite desarrollar aplicaciones de bases de datos elegantes que soportan una amplia gama de diferentes cargas de trabajo, desde bases de datos SQL hasta bases de datos de documentos como MongoDB y Oracle Autonomous Database. Esta presentación del creador de Micronaut y arquitecto de Oracle, Graeme Rocher, te llevará a través de un recorrido por el uso de las funciones clave de Micronaut Data, que incluyen:</p><ul><li>Persistencia a SQL y bases de datos de documentos</li><li>Acceso a la base de datos sin bloqueo con R2DBC</li><li>Transacciones programáticas y declarativas</li><li>Eventos de persistencia</li><li>Especificaciones de criterios (search criteria)</li><li>Creación de aplicaciones de bases de datos nativas con GraalVM y Native Image</li></ul><p>Esta es tu charla si quieres aprender en profundidad sobre Micronaut, Micronaut Data y GraalVM.</p>",
      "type": "talk",
      "tags": [
        "micronaut",
        "database",
        "graalvm",
        "microservices",
        "sql"
      ],
      "level": "middle",
      "speakers": [
        "6c31223d3be1de9ea66a96974ec4f524cd6a786f"
      ],
      "scheduleId": "#TUE-TC3-SE2"
    },
    {
      "id": "6229198856274e0bddf0079e",
      "title": "Give your application memories",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Most applications only know the present. Their current state is calculated and updated on every change, effectively losing previous conditions and information that existed in the past. Can that be a limitation? Missed opportunity? What if your application could remember its entire history? Would that be helpful, or is it a worthless effort?</p><p>This talk will provoke Java developers to start asking such questions. It will help you make applicable mental models of Event Sourcing, DDD, and CQRS concepts. It will also demonstrate what it takes to build such applications in Java.</p>",
      "type": "talk",
      "tags": [
        "Event Sourcing",
        "Distributed system",
        "CQRS",
        "Java"
      ],
      "level": "middle",
      "speakers": [
        "24a5f774e105713678358ec00b22df50b32059df"
      ],
      "scheduleId": "#TUE-TC5-SE5"
    },
    {
      "id": "62291d7956274e0bddf0079f",
      "title": "To Java 19 and Beyond!",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Java 17 has come and gone, but development on Java continues on! What has changed since Java 11? And what changes are being added in Java 19 and Beyond? Come find out!</p><p>In this presentation we will look at some of the key changes that have been added to Java post-8. The large changes; the Module System and Records, quality of life improvements; var, text blocks, pattern matching, and the many performance and runtime improvements. We will finish the presentation with a brief look ahead to some of the changes that will be coming to Java in the near future and why Java’s future is bright.</p>",
      "type": "talk",
      "tags": [
        "Java",
        "JVM"
      ],
      "level": "beginner",
      "speakers": [
        "459fc7466dfa9163817d35cc884ca96e154c2420"
      ],
      "scheduleId": "#MON-TC2-SE3"
    },
    {
      "id": "62291eab56274e0bddf007a0",
      "title": "All test are green? Oh no!! Why it is sometimes good, if a test fails.",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Test coverage: 100% - Check!</p><p>And why do we still have bugs?</p><p>OK, tests don't prove the absence of errors.</p><p>And at the end of the day, they are just code which could contain bugs as well.</p><p>And perhaps they give us a false sense of security.</p><p>But how do I know, that my test are good?</p><p>One way to find out is using Mutation Testing.</p><p>In this talk I want to explain, what Mutation Testing is, how to do it and when it is helpful.</p>",
      "type": "talk",
      "tags": [
        "Testing",
        "Quality of tests"
      ],
      "level": "beginner",
      "speakers": [
        "333c3c7a68eddba59d67331ec6422d0092a814b3"
      ],
      "scheduleId": "#MON-TC1-SE5"
    },
    {
      "id": "6229f5eb56274e0bddf007a2",
      "title": "Seguridad en Micronaut®",
      "languages": [
        "es"
      ],
      "abstract": "<p>En esta sesión, Sergio del Amo presenta Micronaut Security, una solución de seguridad personalizable y con todas las funciones para sus aplicaciones.</p><p>Los temas incluyen:</p><p>Autenticación (autenticación básica, basada en cookies, basada en sesiones, portador, LDAP, X.509)</p><p>Acceso usuario autenticado</p><p>Configuración de seguridad (@Secured, mapa de URL de intercepción y más)</p><p>OAuth 2.0 (Código de autorización, Credenciales de cliente, Concesiones de credenciales de contraseña)</p><p>OpenID Connect (integración con proveedores de servidores OAuth 2.0 de terceros: Auth0, Okta, Keycloak, Amazon Cognito)</p><p>JWT (firma, validación, generación, JWKS)</p><p>Propagación de tokens</p><p>Eventos de seguridad</p><p>Descubra lo fácil que es trabajar con Micronaut Security y aprenda a adaptarlo a sus necesidades.</p><p>Sergio del Amo es Micronaut core commiter, Developer Advocate de la Fundación Micronaut y presentador del “Micronaut podcast” (https://micronautpodcast.com).</p>",
      "type": "workshop",
      "tags": [
        "Micronaut",
        "Security",
        "OAuth 2.0",
        "JWT",
        "JWKS",
        "OpenID Connect"
      ],
      "level": "middle",
      "speakers": [
        "594e335548f1564c9d8057f7b0098872db39f5df"
      ],
      "scheduleId": "#WED-TC3-SE1"
    },
    {
      "id": "62324db53a63410bd73c06e4",
      "title": "Event Streaming for the Best of All Worlds",
      "languages": [
        "eng"
      ],
      "abstract": "<p>When it comes to distributed, event-driven messaging systems, we usually see them supporting either one of two types of semantics: streaming, or queueing, and rarely do we find a platform that supports both.  In this presentation, we’ll first get an introduction and some clarifications of event-driven versus message-driven systems, event streams, and stream processing.  We’ll then take a look at Apache Pulsar which offers a very unique capability in modern, cloud-native applications and architecture, in which its platform supports both Publish-Subscribe and Message Queues, and extends into streams processing as well as performs message mediation & transformation.  We will see how it works closely with and relies on Apache Bookkeeper for its durable, scalable, and performant storage of log streams, and leverages on Apache Zookeeper to manage the otherwise very complex ecosystem.  We will then compare Apache Pulsar with the popular Apache Kafka platform to understand some of their key differences as to how Pulsar can overcome some of Kafka's limitations.  With Pulsar's flexible architecture and cloud-native readiness, we will take a look to see how it can be integrated and work collaboratively with the popular Spring framework.</p>",
      "type": "talk",
      "tags": [
        "Event Streaming",
        "Distributed Messaging",
        "Pub/Sub",
        "Cloud Native",
        "Java",
        "OSS",
        "Apache Pulsar"
      ],
      "level": "beginner",
      "speakers": [
        "443a683fa84a77151521434bf96a7a082d29d361"
      ],
      "scheduleId": "#TUE-TC2-SE3"
    },
    {
      "id": "623b88963a63410bd73c06f9",
      "title": "Open Innovation and the Java Platform ",
      "languages": [
        "eng"
      ],
      "abstract": "<p>In this presentation we look at recent enhancements to the language. We will also provide resources to help you get more involved in the evolution of Java, learn Java, and explore how you can contribute to the Java community. We will show you how to stay informed when new versions of Java are released and how joining your local Java User Group builds your network and may eventually lead to better career opportunities. Come for Java; stay for all the fun!</p>",
      "type": "talk",
      "tags": [
        "java",
        "community",
        "jdk",
        "innovation",
        "careers"
      ],
      "level": "beginner",
      "speakers": [
        "cdb2f4341ae9909562e3f30b68c1d4ade0597c01"
      ],
      "scheduleId": "#TUE-TC4-SE1"
    },
    {
      "id": "623b89093a63410bd73c06fa",
      "title": "Cloud-Native Application Development with MicroProfile",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Ever wondered what is a Cloud Native Application? Is it a microservice or a monolith? oh, it must be made for Cloud using Java? Ever Wondered how to develop a Cloud-Native Application? Come to this session to find out about what making an application Cloud-Native and then learn how to build a Cloud-Native Application using the latest MicroProfile technologies (MicroProfile 4.1) such as Config, Fault Tolerance, Rest Client, JWT, Metrics etc. This session finishes with a live demo on developing Cloud-Native applications using MicroProfile 4.1 running on Open Liberty and deploying them on k8s.</p>",
      "type": "talk",
      "tags": [
        "cloud-natve",
        "config",
        "microprofile",
        "kubernetes"
      ],
      "level": "beginner",
      "speakers": [
        "907ad623981c92e789c5b74ed8c18db8a0c1be71"
      ],
      "scheduleId": "#MON-TC2-SE6"
    },
    {
      "id": "623b8c513a63410bd73c06fd",
      "title": "Now is the time: From Java 11 to 17",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Java 17 has come almost a year ago, but many happily run production on Java 11. Some are afraid to migrate forward due to fear, and due to memories of a difficult migration from Java 8. Others don’t see a significant value and lack motivation in invest in the migration forward. The talk will cover, why staying on Java 11 is an additional risk and additional cost, will cover breaking changes between java 11 and 17. The talk will overview benefits of the migration forward, overview of JVM changes, a quick review of the major language and API changes between Java 11 and 17.</p>",
      "type": "talk",
      "tags": [
        "Java",
        "JVM",
        "Migration"
      ],
      "level": "middle",
      "speakers": [
        "eecf1fc106a3fda9197602173d272b9e3c7b8613"
      ],
      "scheduleId": "#TUE-TC2-SE2"
    },
    {
      "id": "62505e6faa23f0085462dda2",
      "title": "Jakarta EE: Community Power and Progress ",
      "languages": [
        "eng"
      ],
      "abstract": "<p>For more than 20 years, Java has been a dominant programming language. Jakarta EE as successor of Java EE provides essential middleware capabilities for the existing and any future enterprise application development. With the new release and great community involvement Jakarta EE’s mission is more frequent releases, lowered barriers to participation, and modernizing the platform is giving great results! This presentation will provide you with key insights into the industry-wide, open source collaboration to modernize Java enterprise systems for cloud-centric use cases.</p>",
      "type": "talk",
      "tags": [
        "#Java",
        "#JavaEE",
        "#JakartaEE",
        "#JVM langs",
        "#Cloud"
      ],
      "level": "beginner",
      "speakers": [
        "851e5eddc5337f77150e3b753a676b412dab892a"
      ],
      "scheduleId": "#TUE-TC4-SE5"
    },
    {
      "id": "62505e8baa23f0085462dda3",
      "title": "Bootiful Tests in Kotlin",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Join us for an exploration of testing a Kotlin based Spring Boot 3.x application. Test driven development gives us the confidence necessary to improve our code faster, safely. But how do you test components and services, as well as integrations across distributed systems, while maintaining fast feedback loops, and how do you do all of this within the context Kotlin? In this talk, we'll look at how to test imperative components, data flows, and mocks. We’ll examine how to take advantage of test slices, and how to test web applications. We'll look at how to ensure that API producers and consumers work well together using consumer driven contract testing without sacrificing the testing pyramid for end-to-end integration tests.</p>",
      "type": "talk",
      "tags": [
        "Kotlin",
        "SpringBoot",
        "TDD",
        "testing"
      ],
      "level": "middle",
      "speakers": [
        "572abc9f31f717b714a59be353c58705853b3b81"
      ],
      "scheduleId": "#TUE-TC4-SE2"
    },
    {
      "id": "62505edfaa23f0085462dda4",
      "title": "The Microservices Smackdown: Data",
      "languages": [
        "es"
      ],
      "abstract": "<p>Los microservicios están en todas partes. Hay más de una forma de implementarlos y desplegarlos, pero al final lo que esperamos de ellos es mover datos de un lugar a otro. Las bases de datos generalmente se encuentran al final de la ejecución de un microservicio. Los microservicios pueden ejecutarse en modo síncrono y asíncrono, pero ¿qué pasa con el procesamiento de datos desde y hacia la base de datos? En esta sesión, cubriremos las capacidades de sincronización y asincronía que ofrecen Helidon, Micronaut, Quarkus y Spring Boot cuando se trata de leer y escribir datos.</p>",
      "type": "talk",
      "tags": [
        "Microservices",
        "Data"
      ],
      "level": "middle",
      "speakers": [
        "17f50b47a57b0354999b00d372ac197a9452a7c1"
      ],
      "scheduleId": "#MON-TC3-SE6"
    },
    {
      "id": "62505f60aa23f0085462dda5",
      "title": "Modern Java microservices in the cloud",
      "languages": [
        "eng"
      ],
      "abstract": "<p>It's 2022, long gone are the days of ceremony and Java development should be productivity, simplicity.</p><p>Let's look at how we make it happen, in context of startup going FAST.</p><p>I will describe the architectural approach we use stack we use, and what, sometimes unorthodox, technology and design choices we have made, and their consequences. Expect: code samples, why does our stack look the way it looks AND… what have we learnt in the process.</p><p>It's all going to be Revolut-based!</p>",
      "type": "talk",
      "tags": [
        "java",
        "microservices",
        "architecture",
        "principles"
      ],
      "level": "middle",
      "speakers": [
        "222e9ee3f64709eb49f3299baaa4f39693e5fb82"
      ],
      "scheduleId": "#MON-TC5-SE8"
    },
    {
      "id": "62506140aa23f0085462dda6",
      "title": "Using Quarkus and Kotlin for amazing developer productivity",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Since it's release, Quarkus has taken the Java world by storm by providing amazing developer productivity to go along with very minimal runtime footprint. Quarkus initially focused on Java, but has recently introduced first class support for Kotlin across it's most important APIs.</p><p>This talk will Kotlin lovers how they can use their favorite language along with Quarkus and reap the best of best worlds.</p>",
      "type": "talk",
      "tags": [
        "Kotlin",
        "Quarkus"
      ],
      "level": "middle",
      "speakers": [
        "7cff2b21cb47f910e18350c6497853c7daf32e09"
      ]
    },
    {
      "id": "6250631eaa23f0085462dda7",
      "title": "Releases determinísticas, reproducibles y sin sorpresas",
      "languages": [
        "es"
      ],
      "abstract": "<p>Cuando un proyecto ha llegado a la etapa en la que es una buena idea publicar binarios, surgen nuevas preguntas, ¿Dónde deberían publicarse? ¿Cómo facilitamos a los usuarios la localización e instalación de binarios? ¿Dónde se deben compartir las releases? Y lo más importante, ¿se pueden automatizar? Hay tantos requisitos y consideraciones dependiendo de los canales de distribución, ¿no sería genial tener una herramienta para hacerlo más fácil?</p><p>JReleaser es una herramienta que brinda respuestas a estas preguntas y más. Se puede usar para crear releases en GitHub/GitLab/Gitea y publicar binarios consumibles desde diferentes canales de distribución como Homebrew, Snap, Scoop y más. Una vez publicada, la release se puede anunciar automáticamente en Twitter, Slack, Gitter, Discord u otros.</p>",
      "type": "talk",
      "tags": [
        "Release",
        "OSS",
        "DevOps"
      ],
      "level": "beginner",
      "speakers": [
        "2d9af6a2ba5f456c6f5b300bd82bd1c75b29da10"
      ],
      "scheduleId": "#MON-TC3-SE5"
    },
    {
      "id": "6257242eaa23f0085462dda8",
      "title": "Construyendo un DSL (Domain-Specific Language / Lenguaje específico de dominio) por diversión y provecho",
      "languages": [
        "es"
      ],
      "abstract": "<p>¿Cuál es el beneficio de incrustar un lenguaje dentro de otro lenguaje? ¿Cómo podemos lograr esto sin morir en el proceso? ¿Vale la pena el esfuerzo?</p><p>En esta charla, veremos algunas de mis experiencias en las que escribir un DSL hizo que el código fuera mucho más legible, extensible e incluso más eficiente! Repasaremos algunas implementaciones de analizadores de texto para un DSL externa, algunas librerías y consejos; y finalmente algunas técnicas más ligeras para embeberlas en aplicaciones de Java.</p>",
      "type": "talk",
      "tags": [
        "Java",
        "Kotlin",
        "Design",
        "Functional Programming"
      ],
      "level": "middle",
      "speakers": [
        "114845540f08032641a03bf464caff7815303e5e"
      ],
      "scheduleId": "#TUE-TC3-SE6"
    },
    {
      "id": "625724b7aa23f0085462dda9",
      "title": "DevOps for Java Shops",
      "languages": [
        "eng"
      ],
      "abstract": "<p>DevOps is great, if you have the people, processes and tools to support it. In this session I’ll highlight the easiest ways for Java developers to work with their IT organizations and partners to deliver their code to the cloud, including the best ways to reliably make updates and maintain production cloud code. The focus is on real-world examples using Linux command line tools, open source tools including Jenkins, and other free SDKs and tools available on GitHub.</p>",
      "type": "talk",
      "tags": [
        "GitHub",
        "GitHub Actions",
        "GitHub CodeSpaces"
      ],
      "level": "middle",
      "speakers": [
        "836bf32dd2283312420733bcbb619965af16ee57"
      ],
      "scheduleId": "#MON-TC2-SE5"
    },
    {
      "id": "625724d1aa23f0085462ddaa",
      "title": "Scaling Camel to the cloud",
      "languages": [
        "eng"
      ],
      "abstract": "<p>In an ever-accelerating IT world, the need to connect different software systems is growing day by day. More than ever, we need to have a tool to easily create decoupled and easy integration connectors between several external systems. But more importantly, we need to be able to scale those into the Cloud.</p><p>Apache Camel with its 350 connectors gives a proven response to such a demand. In this talk, we will present Apache Camel and explain how to scale Apache Camel based microservices to the cloud. We will present how to make your Camel, Camel Quarkus and Camel K solutions to make them more scalable, high-performing, and observable.</p>",
      "type": "talk",
      "tags": [
        "Camel",
        "Quarkus",
        "Kafka"
      ],
      "level": "middle",
      "speakers": [
        "cf874a75dcb4f22703fb632b069cd640aabbda7f",
        "92722ac8669606acafdd0895be1e8ee444b5fedc"
      ],
      "scheduleId": "#TUE-TC5-SE7"
    },
    {
      "id": "62572502aa23f0085462ddab",
      "title": "Terrible Rollouts and how to Survive Them",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Every developer should know that pushing feature updates to production via traditional channels is as archaic as painting on cave walls. And yet, many continue to do so.</p><p>The best developers are always quick to adapt to new, innovative technologies. This mindset is exactly what separates great developers from the average.</p><p>So how do you make sure you’re not a developer that’s stuck in the stone age when doing feature rollouts?</p><p>In this talk, I will share the insights I’ve gained so far in my career as to what should be thought about before releasing a sensitive feature, how to plan it, what type of tools should be used, and how it should be communicated (both externally and internally). Most importantly, I’ll share what should be done when it all goes wrong - and some horror stories of when it did go wrong - and yes, destroying production will be one of them.</p>",
      "type": "talk",
      "tags": [
        "#Agile",
        "#cleancode",
        "#design"
      ],
      "level": "middle",
      "speakers": [
        "14af727ca8fe920d4fb467b94577c62a09ca62a8"
      ],
      "scheduleId": "#MON-TC4-SE8"
    },
    {
      "id": "62572537aa23f0085462ddac",
      "title": "Implementing Kubernetes Operators with Java Operator SDK",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Nowadays it's becoming a standard that developers not just build but also run their software. Managing deployments on Kubernetes it's not necessarily a simple task. In this talk we will take a look at how  Kubernetes Operators can help with that and how to write one.</p><ul><li>What are Kubernetes Operators?</li><li>What are the involved design patterns?</li><li>Why implement Kubernetes Operators in Java?</li></ul><p>First we will answer these questions. In the second part, we will live code a simple Kubernetes Operator using Java Operator SDK, that makes it very clear how to start, how a standard Operator should look like in practice and how to implement the related design patterns.</p>",
      "type": "talk",
      "tags": [
        "Kubernetes",
        "Operators",
        "Java",
        "Quarkus"
      ],
      "level": "middle",
      "speakers": [
        "508d77fd6c0d6171c5228adac3b440c1b4d2ad8a"
      ],
      "scheduleId": "#MON-TC4-SE4"
    },
    {
      "id": "6272d90071e11d0858e82241",
      "title": "(Mis)Understanding Cloud-Native",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Cloud is great and cloud-native is really nice. However, we are often met with some misconceptions and terms that are being thrown around. Vendor lock-in, serverless, zero downtime, zero trust, scale-to-zero, and many more. Some can be confusing, and some even intimidating. In this session, we will try to bust a few myths about cloud-native development and help to develop better and more modern applications.</p>",
      "type": "talk",
      "tags": [
        "cloud",
        "kubernetes",
        "practices"
      ],
      "level": "beginner",
      "speakers": [
        "959143ffd6c954e5e544cdce71383429895e3679",
        "72b36c4f06a1b0211e42921b9815136568fa1b73"
      ],
      "scheduleId": "#TUE-TC1-SE3"
    },
    {
      "id": "6272de1a71e11d0858e82242",
      "title": "Del final al principio: Un viaje guiado por métricas",
      "languages": [
        "es"
      ],
      "abstract": "<p>Caminar sobre el agua y desarrollar software sobre unos requisitos es fácil, siempre y cuando ambos estén congelados.</p><p>En esta sesión, explicaremos nuestro camino en el rediseño de nuestro sistema de alertas de búsquedas para usuarios y cómo el cambio de contexto y requerimientos nos hizo replantear nuestra implementación, pasando de un enfoque near-real-time a un proceso en batch. Dicha transformación supondría algunos trade-offs, pero, por otro lado, nos ha permitido escalar de unos pocos millones a decenas de millones de alertas.</p><p>De la misma manera, expondremos la importancia de definir métricas como parte de la estrategia de implementación y cómo éstas nos ayudaron a arrojar luz en los siguientes pasos.</p>",
      "type": "talk",
      "tags": [
        "observability",
        "scalability",
        "distributed system"
      ],
      "level": "middle",
      "speakers": [
        "86e816de6f93283ebd9797c0b9272a6e4850d088",
        "1fdb348ad3d0b80f86295945a9eb2069a03e6d50"
      ],
      "scheduleId": "#MON-TC3-SE7"
    },
    {
      "id": "6272e23171e11d0858e82243",
      "title": "Shifting Left - Securing Infrastructure as Code",
      "languages": [
        "eng"
      ],
      "abstract": "<p>A study by Unit 42 found that \"close to 200,000 potential vulnerabilities have been discovered in IaC templates. Also, more than 43% of cloud databases are currently unencrypted, and only 60% of cloud storage services have logging enabled, which in itself is a serious concern.\"</p><p>Do you also find yourself struggling with a lot of similar cloud infrastructure security alerts in slack? Or, as a developer after spearheading an automated deployment, do you spend a great deal of time going through various infrastructure as code vulnerabilities? Does your compliance report also show you numbers where MTTD and MTTR are far apart?</p><p>Join this talk if you would like to learn how and why to continuously assess, detect, and respond to cloud security threats in real-time. Learn how to implement security and compliance standards from someone who tried and failed and eventually succeeded in building an IaC Security Product from scratch.</p>",
      "type": "talk",
      "tags": [
        "#Security",
        "#Cloud",
        "#CI",
        "#CD",
        "#Integration",
        "#Cloud-Native"
      ],
      "level": "middle",
      "speakers": [
        "72036b8655975d50ae6e51b7e51402b767c06c0e"
      ],
      "scheduleId": "#MON-TC5-SE3"
    },
    {
      "id": "6272e56271e11d0858e82244",
      "title": "OpenTelemetry Real Life Production Examples",
      "languages": [
        "eng"
      ],
      "abstract": "<p>From real life example of a customer using distributed tracing in production, we will go into details of what were the problems he tried to solve? Why did he select distributed tracing and OpenTelemetry? How was the implementation with success and land mines to avoid? How does it impact the root cause and performance analysis workflows? And finally, what were the technical and business benefits?</p><p>By the end of this talk, you’ll understand -</p><p>•\tvalue distributed tracing and OpenTelemetry can bring in production,</p><p>•\tpitfalls to avoid during implementation,</p><p>•\tdeployed OpenTelemetry architecture principles,</p><p>•\tdifferences and some of the changes it creates in your practices, like impacts on code, logs management, SRE and Dev team organizations.</p>",
      "type": "talk",
      "tags": [
        "#OpenTelemetry",
        "#Observability",
        "#Monitoring",
        "#Microservices",
        "#Performance",
        "#RCA",
        "#Kubernetes",
        "#Instrumentation",
        "#UserExperience",
        "#SRE"
      ],
      "level": "beginner",
      "speakers": [
        "34d565db320a6c8f22c1b6c05b18a1aa01ba0796"
      ],
      "scheduleId": "#MON-TC5-SE5"
    },
    {
      "id": "6272e73371e11d0858e82245",
      "title": "Gentle introduction to machine learning algorithms, with examples",
      "languages": [
        "eng"
      ],
      "abstract": "<p>In the past years we have seen how programs can outperform humans in many specific tasks. Machine learning algorithms are used in fields as diverse as finance, science, medicine, manufacturing industry, fashion or security. In this talk you will learn about the different algorithms in machine learning: regression, classification, clustering, dimensionality reduction and representation and reinforcement learning, and how neural networks can be used to implement them. I will show a practical example of how deep learning can be used in a computer vision task.</p>",
      "type": "talk",
      "tags": [
        "Machine Learning",
        "Deep Learning",
        "Computer Vision"
      ],
      "level": "beginner",
      "speakers": [
        "1e65ff335ce12cb03cc2dc5130ad907c4d47da6f"
      ],
      "scheduleId": "#MON-TC4-SE7"
    },
    {
      "id": "6272e7bc71e11d0858e82246",
      "title": "GraphQL-ify your APIs",
      "languages": [
        "eng"
      ],
      "abstract": "<p>GraphQL is query language for APIs, but what are the advantages and how would one implement such in their microservices/APIs. In this session, I will go through the basics of GraphQL, different aspects of GraphQL and architecture of such APIs. There will be a demo/live-coding on, how 4 different ways we can implement GraphQL for a Springboot microservice/API. Lots of examples, live coding and helpful comparison on structure, usage and implementations of GraphQL in Springboot & Java world.</p>",
      "type": "talk",
      "tags": [
        "GraphQL",
        "Spring Boot",
        "Java"
      ],
      "level": "beginner",
      "speakers": [
        "dc7843096c80aaceb163e68b573a9c5618c9146a"
      ],
      "scheduleId": "#TUE-TC4-SE6"
    },
    {
      "id": "627c168c26f9720858a38eef",
      "title": "Optimal data warehouse for analytics: Apache Kafka and ClickHouse",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Apache Kafka is amazing at handling real-time data feeds. However, in certain cases we need to come back to older records to analyse and process data at later times. This is challenging because storing records indefinitely and doing large scans of data in Apache Kafka is not optimal.</p><p>ClickHouse, on the other hand, is a scalable and reliable storage designed to handle petabytes of data and, at the same time, it is a powerful open-source tool for fast online analytical processing, it is now used by many companies for data analytics. What's more ClickHouse has a built-in table engine to publish and subscribe to Apache Kafka data feeds.</p><p>Hence, we can use Apache Kafka and ClickHouse in collaboration to transition older records to a data warehouse in order to perform analytics at scale on top of fresh data that Kafka provides.</p><p>In this talk you’ll learn how to use Apache Kafka together with ClickHouse and how to query the data stored in the data warehouse. This session is for those who want to perform analytics with fast response time over a huge volume of data without the need to downsample it.</p>",
      "type": "talk",
      "tags": [
        "Apache Kafka",
        "ClickHouse",
        "columnar databases",
        "OLAP",
        "analytics"
      ],
      "level": "middle",
      "speakers": [
        "f86ffeacee17037b8e78ba1a94e99659035eee78"
      ],
      "scheduleId": "#MON-TC5-SE7"
    },
    {
      "id": "627c16ee26f9720858a38ef0",
      "title": "Bungee jumping to Quarkus, blindfolded but happy",
      "languages": [
        "eng"
      ],
      "abstract": "<p>A year ago I started with a couple of friends a new project to create a visual editor for integrations: based on a visual drag and drop selection on building blocks, generate deployable source code.</p><p>As responsible of the backend side, I obviously chose Java to do it. Some of the challenges were to have an extendable and customizable core where we could inject module languages to generate different outputs depending on how the user wanted to deploy. We also wanted to customize the catalog of building blocks to dynamically adapt to each user. Coming from the Java 8 world with shy traces of Java 11, I decided to jump directly to Quarkus on Java 17 and explore the serverless possibilities while, at the same time, keep the over-engineering and the over-fanciness of new features as reasonable as possible.</p><p>On this talk I will describe the bowels of Kaoto.io, the journey we had to implement a stable architecture, and how it evolved into the powerful tool it is now. I will discuss about the technologies used, their shortcomings and their black magic; and why the decisions made were the right ones (or not!).</p><p>This is a good talk if you want to see Quarkus in a real use case.</p>",
      "type": "talk",
      "tags": [
        "Quarkus",
        "Java 17",
        "serverless",
        "k-native"
      ],
      "level": "beginner",
      "speakers": [
        "54502dffd46874a385c1e0c37cea135bc9240db3"
      ],
      "scheduleId": "#TUE-TC4-SE4"
    },
    {
      "id": "627c180d26f9720858a38ef1",
      "title": "De 0 a 100 construyendo monolitos modulares que escalen a microservicios",
      "languages": [
        "es"
      ],
      "abstract": "<p>En este taller, pondremos en práctica lo visto en la charla \"Construyendo monolitos modulares que puedan escalar a microservicios\" de la edición 2021 y experimentaremos en primera persona cómo abordar el escalado de un monolito y evolucionarlo a microservicios, a medida que el proyecto crece y evoluciona en complejidad, o las necesidades de soportar una mayor carga evolucionan de distinta forma para distintas partes de la aplicación.</p><p>Para ello, partiremos de la construcción de un monolito modular utilizando técnicas de DDD, CQRS y Event-Sourcing, y veremos cuáles son las herramientas que hacen posible que el escalado sea sencillo. Comprobaremos qué es lo importante a tener en cuenta en nuestro diseño para que la división y el escalado sean sencillos.</p>",
      "type": "workshop",
      "tags": [
        "java",
        "EventSourcing",
        "microservicios",
        "monolitos"
      ],
      "level": "middle",
      "speakers": [
        "9907d2fdf89356ee1bfc20234cf2ffa7316833c2"
      ],
      "scheduleId": "#WED-TC3-SE2"
    },
    {
      "id": "627c18d126f9720858a38ef2",
      "title": "Keep Your Cache Always Fresh with Debezium!",
      "languages": [
        "eng"
      ],
      "abstract": "<p>The saying goes that there are only two hard things in Computer Science: cache invalidation, and naming things. Well, turns out the first one is solved actually ;)</p><p>Join us for this session to learn how to keep read views of your data in distributed caches close to your users, always kept in sync with your primary data stores change data capture. You will learn how to</p><ul><li>Implement a low-latency data pipeline for cache updates based on Debezium, Apache Kafka, and Infinispan</li><li>Create denormalized views of your data using Kafka Streams and make them accessible via plain key look-ups from a cache cluster close by</li><li>Propagate updates between cache clusters using cross-site replication</li></ul><p>We'll also touch on some advanced concepts, such as detecting and rejecting writes to the system of record which are derived from outdated cached state, and show in a demo how all the pieces come together, of course connected via Apache Kafka.</p>",
      "type": "talk",
      "tags": [
        "Apache Kafka",
        "change data capture",
        "data streaming",
        "caching",
        "microservices"
      ],
      "level": "middle",
      "speakers": [
        "44775844c7cf4df6e20eb4b208e13ebdb02a3ef9"
      ],
      "scheduleId": "#MON-TC1-SE8"
    },
    {
      "id": "627c18f226f9720858a38ef3",
      "title": "The Hitchhiker’s Guide to a Great Developer Career",
      "languages": [
        "eng"
      ],
      "abstract": "<p>As developers, our job is to write great code, test code, deploy code, fix code, and even delete code, but nobody told us that there is much more to it if we want to have a great developer career.</p><p>In this talk, Sven and Helen will share their successes and failures during their 20-year careers to date working for various technology companies. You’ll learn about growing your personal brand (what is it good for?), the trials and tribulations of different roles (so many choices), becoming a manager (or not), mentoring and sponsoring (they are not the same thing), how to care for yourself (prevent burnout), and lots more career advice.</p><p>You'll hear about their inevitable bumps in the road (or downright failures), as well as their successes. As it turns out, having a great developer career is not all about the technology and the code; it's also about you and the people around you!</p>",
      "type": "talk",
      "tags": [
        "career",
        "leadership"
      ],
      "level": "beginner",
      "speakers": [
        "6e6c32699364da6fd090b2002c3e64da4cecacbb",
        "efddc30dae7a2df8f301c9afbebbb8e0bb3fb27a"
      ],
      "scheduleId": "#TUE-TC4-SE7"
    },
    {
      "id": "627c1b0426f9720858a38ef6",
      "title": "Superman or Ironman - can everyone be a 10x developer?",
      "languages": [
        "eng"
      ],
      "abstract": "<p>It’s all about productivity or maybe it’s all about delivering value. Or creating secure applications, dealing with changing directions.</p><p>Whatever it it we often feel that we’re lacking - that it’s hard enough to be any sort of developer. That even 1x is often a challenge</p><p>In this talk we’re going to examine how to think more clearly about being a Java developer:, help you understand the tools and approaches that can offer practical insight into how you work now as well as providing guidance on alternatives that just might give you the powered armour you need.</p><p>A mix of tools, proven processes, new techniques and lessons learnt the hard way make up a session designed to help you understand that being a 10x developer isn’t about having super powers - it’s about using the powers you already have in wiser, more considered ways.</p>",
      "type": "workshop",
      "tags": [
        "productivity",
        "dpe",
        "java",
        "cloud",
        "security",
        "sanity",
        "imposter"
      ],
      "level": "beginner",
      "speakers": [
        "1eb862c7a058f67d5b1e4fcd98fa2d2ce12fe5c0"
      ],
      "scheduleId": "#WED-TC2-SE2"
    },
    {
      "id": "627c1bdd26f9720858a38ef7",
      "title": "El lado oculto del despliegue de modelos IA",
      "languages": [
        "es"
      ],
      "abstract": "<p>¿Alguna vez te has enfrentado a un desafío profesional en el que simplemente no sabías por dónde empezar? ¿Qué le sucede a un modelo de IA una vez que ha sido entrenado y probado?</p><p>En esta charla, voy a compartir cómo me transformé en una ingeniera de datos durante dos semanas, mientras trabajaba para implementar nuestros modelos de IA en un datalake de Cloudera usando Spark.</p>",
      "type": "talk",
      "tags": [
        "Artificial intelligence",
        "machine learning",
        "NLP",
        "integration",
        "spark",
        "personal challenges"
      ],
      "level": "middle",
      "speakers": [
        "b3da9cdff962b1acbca9868acc10361463f07614",
        "2a88aa1b1e9f6e4a6c13ddb06f9f72cb48b853c8"
      ],
      "scheduleId": "#MON-TC3-SE3"
    },
    {
      "id": "62855149d7a7c108376c3a62",
      "title": "Treasure.map(): Functional Programming in JVM-based languages",
      "languages": [
        "eng"
      ],
      "abstract": "<p>What is a monad? Do I need a PhD to write in functional style? Any hidden gems that will improve my developer experience?</p><p>In this talk, we'll cover the core concepts of functional programming, discuss typical patterns and structures, their limitations and how to explain to your team that a monad is just a monoid in the category of endofunctors but nobody should be scared.</p>",
      "type": "talk",
      "tags": [
        "Kotlin",
        "Scala",
        "Clojure",
        "Java",
        "Groovy"
      ],
      "level": "middle",
      "speakers": [
        "d71d836c712c4711d66f0794557f431f11dd333a"
      ],
      "scheduleId": "#TUE-TC4-SE3"
    },
    {
      "id": "62855161d7a7c108376c3a63",
      "title": "LGTM - Open Source Monitoring with Loki, Grafana, Tempo, and Mimir",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Java observability tools like the OpenTelemetry's auto-instrumentation agent or the upcoming Micrometer release make it easy to get metrics, distributed traces, and logs out of your Java applications.</p><p>This talk focuses on what you can do with these signals. We will show how you can set up your own monitoring backend using Loki, Tempo, and Mimir as open-source databases for logs, traces, and metrics. We will explore best practices for visualizing the data in Grafana dashboards, explore how to create alerts, and how to navigate the data when analyzing the root cause for an alert.</p>",
      "type": "talk",
      "tags": [
        "monitoring",
        "opentelemetry",
        "java",
        "observability"
      ],
      "level": "middle",
      "speakers": [
        "83000b23dafd750a87d9e4fda12b906fc1e4e734"
      ],
      "scheduleId": "#MON-TC5-SE6"
    },
    {
      "id": "628551c9d7a7c108376c3a64",
      "title": "Immutability Against The Machine",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Immutability has taken over the software world. Programmers are using immutable values to make their products more maintainable. They are able to focus on higher-level architectural problems instead of hard-to-debug accidental mutations.</p><p>However, the software we write often needs to run on a real machine. It needs state, it needs to do many things at once using multiple threads, and it needs to acquire some resources like sockets or files. Moreover, it needs to clean after itself in any condition, even when things go awry, making sure it never leaks memory or resources. We may be tempted to say that solving these concerns requires some old-school mutations. But it doesn’t!</p><p>In this talk we will show a real-world application that uses state, multiple threads, and resources. We will use real data from an external Wikidata service, make sure we conform to the API limits, implement a cache, and make sure we release all unneeded connections along the way. Most importantly, all this is going to be modelled as immutable values!</p>",
      "type": "talk",
      "tags": [
        "design principles",
        "APIs",
        "debugging",
        "functional programming",
        "cache",
        "memory leaks",
        "scala",
        "architecture",
        "immutability"
      ],
      "level": "advanced",
      "speakers": [
        "c5ec49ea9516fdcd9aad629778979043b2fe331e"
      ],
      "scheduleId": "#TUE-TC1-SE5"
    },
    {
      "id": "628551e8d7a7c108376c3a65",
      "title": "Use Testing to Develop Better Software Faster",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Testing doesn't always get the attention it deserves in software development. Many developers claim to be bad at it, or are just not that interested. (These may or may not be related.)</p><p>As developers, our job is to deliver working software. With the shift to CI/CD and the move to the cloud, the need to have the right feedback at the right time only increases. There are many ways that testing can help us with that. Not only can testing help us verify our solution and prevent us from breaking things, it can also help us design our software, find flaws in our architecture and come up with better solutions. In this talk I will highlight some of the many ways that testing can help you to develop better software faster.</p>",
      "type": "talk",
      "tags": [
        "Jvm",
        "testing",
        "architecture",
        "quality"
      ],
      "level": "beginner",
      "speakers": [
        "de2cd836ea5980909c79dfc4ea139f8db52b14bb"
      ],
      "scheduleId": "#TUE-TC2-SE4"
    },
    {
      "id": "62855388d7a7c108376c3a66",
      "title": "Techniques for a faster JVM start-up",
      "languages": [
        "eng"
      ],
      "abstract": "<p>During this session, I will discuss a few techniques about how to improve the JVM start-up time for any application running on the JVM, independent of the programming language. These techniques could be applied in any project, in general without code changes. You can use the same techniques to speed up the JVM start-up time for your applications (both in development and production environments).</p><p>Main topics:</p><ul><li>when the JVM start-up matters (i.e. for what types of applications)</li><li>Application/Dynamic class-data sharing in HotSpot JVM</li><li>Shared class cache in Eclipse OpenJ9</li><li>Ahead-of-time (AOT) compilation</li><li>few handy JVM flags</li><li>hands-on demonstration (including benchmarks results)</li><li>The JVMs included in this talk are OpenJDK HotSpot, Eclipse OpenJ9 and Graal VM</li></ul>",
      "type": "talk",
      "tags": [
        "performance",
        "start-up",
        "JVM"
      ],
      "level": "middle",
      "speakers": [
        "3932177414abf39b49cc295816a61762874d8b1e"
      ],
      "scheduleId": "#TUE-TC5-SE2"
    },
    {
      "id": "628554aed7a7c108376c3a67",
      "title": "Better Understanding through Bytecode",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Getting familiar with complicated technical topics like concurrency or recursion, we often look to abstractions. We boil things down to diagrams with boxes and arrows, tucking the details away for later.</p><p>While often a great starting point, there’s a lot of value in pushing the other direction too. On the JVM, reality isn’t your Java, Kotlin, or Clojure code -- it’s the bytecode running below the surface. Surprisingly, many elusive topics may actually be clearer when we can understand what’s happening at that layer below.</p><p>In this talk, we’ll get up to speed on just enough bytecode reading to start exploring real topics like lost writes from concurrency, tail recursion, and co-routines. We’ll get familiar with the basic tools and opcodes, what to do when the bytecode’s hard to understand, and come away more confident in our ability to understand our systems from top to bottom.</p>",
      "type": "talk",
      "tags": [
        "JVM",
        "internals",
        "concurrency",
        "recursion",
        "Java",
        "Kotlin"
      ],
      "level": "middle",
      "speakers": [
        "ffaad51498cdf845c5c9f24c4eff0d9b17bba237"
      ],
      "scheduleId": "#MON-TC4-SE3"
    },
    {
      "id": "628e909d0cb98308207c30de",
      "title": "El rendimiento Excepcional de Kotlin - Revisión de \"Excepcioncita\"",
      "languages": [
        "es"
      ],
      "abstract": "<p>Como dice el adagio viejo, \"no use excepciones como control de flujo\", ¿pero por qué? En 2014 Aleksey Shipilëv publicó \"The Exceptional Performance of Lil' Exception\" (El Rendimiento Excepcional de Excepcioncita\", un artículo excelente sobre las características de rendimiento del sistema de excepciones en Java y cómo salen unas estrategias diferentes de manejar las excepciones en varios escenarios para demostrar por qué el adagio existe. Desde entonces, el lenguaje de programación Kotlin se ha disparado en popularidad, y este lenguaje introduce nuevas opciones para tratar excepciones, por ejemplo clases inline y clases selladas. Con la ayuda del Java Microbenchmark Harness, esta presentación explorará los beneficios, desventajas y características de rendimiento de varias estrategias para tratar las excepciones que pueden ser empleadas usando estos rasgos de Kotlin.</p>",
      "type": "talk",
      "tags": [
        "Kotlin",
        "JMH",
        "Performance"
      ],
      "level": "advanced",
      "speakers": [
        "8fc3e7dd2d1a897d037ce00e9be96e35a493bd5b"
      ],
      "scheduleId": "#TUE-TC3-SE7"
    },
    {
      "id": "628e91130cb98308207c30df",
      "title": "Nuestro viaje a Data Mesh: impulsando los datos en un mundo de microservicios",
      "languages": [
        "es"
      ],
      "abstract": "<p>En esta charla hablaremos de arquitecturas de microservicios y su relación con BigData.</p><p>¿Crees que tienes demasiadas dependencias entre tus microservicios? ¿Tienes pipelines de extracción de datos y te preocupa el sobreesfuerzo de mantenerlos? ¿Quieres adoptar Machine Learning masivamente y te preguntas cómo conectar los datos de tus microservicios a los procesos de training de ML? ¿Has implementado un Data Lake pero tienes dudas sobre la calidad de los datos o del coste de mantenerlo?</p><p>En esta charla compartiremos nuestras experiencias evolucionando nuestra arquitectura desde un monolito (2008) a microservicios (más de 250 actualmente), de los problemas que esta evolución causó en los pipelines de datos para los equipos de análisis (Data Science, BI), de las diferentes soluciones que consideramos para solucionarlos, y de por qué decidimos adoptar el paradigma de Data Mesh.</p><p>El paradigma de Data Mesh se publicó en 2019 en el blog de Martin Fowler, pero hay pocos ejemplos públicos de cómo llevarlo a cabo. Presentaremos cómo hemos implementado el Data Mesh, incluyendo los principios, la arquitectura, el stack tecnológico, y los flujos de datos entre los microservicios y la plataforma de datos. Explicaremos cómo hemos solucionado los retos de trazabilidad, privacidad, normativa PCI, costes, tiempos de respuesta y mantenimiento en eDreams ODIGEO, la segunda agencia de viajes del mundo en vuelos.</p>",
      "type": "talk",
      "tags": [
        "#Microservices",
        "#GCE"
      ],
      "level": "middle",
      "speakers": [
        "995deafb6a160f93df5d5e8906e6be02205373d5"
      ],
      "scheduleId": "#MON-TC3-SE8"
    },
    {
      "id": "628e97bf0cb98308207c30e0",
      "title": "Approaching OAuth 2 with Spring Security and the new authorization server",
      "languages": [
        "eng"
      ],
      "abstract": "<p>The new Spring Security authorization server is out there and you can use it in production. Hoooray! For a long time, after the Spring Security OAuth project deprecation, the community was surrounded by confusion around what to use for implementing an authorization server. The confusion is over know since the new Spring Security authorization server is out and ready for you to use it. I invite you to a talk in which we'll see how to apply grant types relevant to real-world applications using the new Spring Security authorization server framework to build our own, custom authorization server.</p>",
      "type": "talk",
      "tags": [
        "OAuth2",
        "Spring Security",
        "OpenID Connect",
        "Spring Security Authorization Server"
      ],
      "level": "middle",
      "speakers": [
        "5a2f5a3fa8dca8de734654345a181ee5399fc961"
      ],
      "scheduleId": "#TUE-TC5-SE3"
    },
    {
      "id": "628e980f0cb98308207c30e1",
      "title": "Accelerate Serverless Java with GraalVM on AWS (Lambda)",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Java is one of the most popular programming languages but seems not to be competitive in terms of start-up time and memory footprint compared to interpreted or natively compiled languages. Both are critical for short-lived serverless functions.</p><p>In this workshop you will learn the concepts, mechanisms and best practices around serverless Java applications. The first part of the workshop covers how to run traditional Java application on AWS and the limitations and challenges involved. In the second part we’ll introduce GraalVM, a high-performance runtime and modify our existing application to gain up to 80% performance improvement during cold-starts.</p>",
      "type": "workshop",
      "tags": [
        "Java",
        "Cloud",
        "Serverless",
        "GraalVM",
        "Performance"
      ],
      "level": "middle",
      "speakers": [
        "8ea4327073ae8971f36f2c0d4d962822ad4e4031",
        "f97f116ba514a6b4bcbda7e6ccae1bb0bde64d6f"
      ],
      "scheduleId": "#WED-TC4-SE1"
    },
    {
      "id": "6297cc034b510b0822d4b66c",
      "title": "Unleash the power of your applications with Micronaut and GraalVM",
      "languages": [
        "es"
      ],
      "abstract": "<p>In this talk, Micronaut committer Álvaro Sánchez-Mariscal, will demonstrate how you can quickly build optimised Microservices with Micronaut & GraalVM Native Image. Attendees will learn how the combination of GraalVM Native Image and Micronaut can lead to efficient, highly performant, and optimised applications that can be perfectly deployed to environments like Kubernetes or serverless platforms</p>",
      "type": "talk",
      "tags": [
        "Micronaut",
        "GraalVM",
        "Java"
      ],
      "level": "beginner",
      "speakers": [
        "85cf4e0c5a4dffe526db92e2b79b3381a790a0cd"
      ],
      "scheduleId": "#TUE-TC3-SE1"
    },
    {
      "id": "629e0757d61b550b63e58f88",
      "title": "Fighting Legacy",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Which is the definition of Legacy Code? In my context is software that works and pay the bills, but we need to work on it in order to get better results and be able to evolve when it’s necessary.</p><p>Working with three (real estate aggregators, Mitula, Nestoria and Nuroa) products with thousands of legacy lines of code, legacy systems and legacy infrastructure is our day to day work in my team, but you know what? We like it, and it is a challenge to figure out how to deal with that situation and at the same time evolve those products.</p><p>In this talk we will show some of the tecniques we use to deal with that code, and the strategies we are taking in the long run in order to survive to that quest, and we will discuss some economics concepts related to that: When to invest in something, when is usefull to work on preventing a risk and how to deal with technical debt (no silver bullet, it’s a difficult subject).</p>",
      "type": "talk",
      "tags": [
        "Jva",
        "kotlin",
        "legacy"
      ],
      "level": "advanced",
      "speakers": [
        "f1d7e2395a50ba1c384294c4bc73eba9170fddd0"
      ],
      "scheduleId": "#MON-TC5-SE4"
    },
    {
      "id": "62ac451d21f34a0b62f77652",
      "title": "Write You An Actor (System) For Great Good! (with JBang, JDK 19, records, pattern matching and virtual threads!)",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Learn everything about all the fanciest recent features of the JDK, by implementing an actor system from scratch!</p><p>In this workshop, we will explain how an actor system works, and live-code it right before your eyes using expression switches, records, sealed type hierarchies, and virtual threads!</p><p>We will compare our actor system to other languages and actor runtimes, and will bring all of this to your fingertips with the power of JBang!</p>",
      "type": "workshop",
      "tags": [
        "Java 17",
        "Actors",
        "concurrency",
        "live coding",
        "demo"
      ],
      "level": "middle",
      "speakers": [
        "2b7ec441cce9bb5ab34f86732420a111c517420a",
        "3a8ccd9f65f848548800c4c1bdb0b3b459e53daf"
      ],
      "scheduleId": "#WED-TC5-SE2"
    },
    {
      "id": "62aefee4a45da90b624341d5",
      "title": "How to be a good Cloud Citizen",
      "languages": [
        "english"
      ],
      "abstract": "<p>Deploying an application to the cloud is easy. Keeping it up and running and scaling it up is also fairly easy, thanks to technologies like Kubernetes. But does that mean that your application is a good Cloud Citizen?</p><p>Is it helping your cluster by providing its real health status? Does it start fast enough to provide serverless functionality? Maybe it’s eating all the resources available in your cluster.</p><p>Also, being a good Cloud Citizen means making it easy for any developers, DevOps, or SRE to make the deployments and upgrades as smooth as possible by making it entirely part of your operational processes.</p><p>Join us in this journey of a perfect Cloud Native Application, where we will cover all the challenges that we have to face from a developer point of view and an operational point of view.</p>",
      "type": "talk",
      "tags": [
        "cloud",
        "kubernetes",
        "serverless"
      ],
      "level": "beginner",
      "speakers": [
        "5c4dc84af05c736fb61555d97670869511e52764"
      ]
    },
    {
      "id": "62b3769796d7c00b689850ad",
      "title": "CompletableFuture and its Quirks",
      "languages": [
        "eng"
      ],
      "abstract": "<p>CompletableFuture revolutionised asynchronous processing in Java. Unfortunately, it’s full of quirks, traps, and surprises… during this live coding session, we’ll have a look at things like: thread pools backing task execution, exception propagation, cancellations, and unintuitive methods from the public API.</p>",
      "type": "talk",
      "tags": [
        "java",
        "async",
        "multithreading"
      ],
      "level": "middle",
      "speakers": [
        "dcf4d5f83bc2dab51fb90922055352668da14a18"
      ],
      "scheduleId": "#TUE-TC1-SE1"
    },
    {
      "id": "62b83cb796d7c00b689850af",
      "title": "Artificial Intelligence needs Backend & DevOps to reach the real-world",
      "languages": [
        "eng"
      ],
      "abstract": "<p>Intelligent models usually work very well under controlled environments. However, when you want them to be deployed into the real world, the process is still unclear and often immature on a technical level: you need infrastructure, QA, automated pipelines, human-in-the-loop validation... In this talk I'd like to share where we are right now: what's the MLOps trend, why it needs diverse profiles and how there are already companies and open source initiatives working along the lines of shortening the step to production, such as MLFlow, Kubeflow, Hugging Face with Gradio/Streamlit or Google with Vertex AI among others.</p>",
      "type": "talk",
      "tags": [
        "Machine Learning",
        "MLOps",
        "AI"
      ],
      "level": "beginner",
      "speakers": [
        "c856e449e2ade396c1365e144fed54a33a558810"
      ]
    },
    {
      "id": "62bab55996d7c00b689850eb",
      "title": "Real-time, real estate listings with Apache Kafka",
      "languages": [
        "eng",
        "es"
      ],
      "abstract": "<p>In real estate markets, it can make a difference to have real-time data instead of the good-old batch processing.</p><p>How many real estate agents are losing time because they cannot find their listing?</p><p>How many home-seekers lost opportunities, hearing things like “sorry, it’s already sold”?</p><p>In this talk I will be presenting how we implemented an event-driven architecture based on Apache Kafka, how it is enabling us to deliver fresh content to all LifullConnect sites across 3 continents, and build meaningful products to real estate professionals, and home-seekers.</p>",
      "type": "talk",
      "tags": [
        "Kafka",
        "Kafka-Streams",
        "Avro",
        "Big Data"
      ],
      "level": "middle",
      "speakers": [
        "06cc66ac133088d8c673c44ccf2f4bba731eb446"
      ],
      "scheduleId": "#TUE-TC2-SE1"
    }
  ]
}
